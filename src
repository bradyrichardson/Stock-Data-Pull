    if timeline == "Intraday" or timeline == "intraday":
        minutes = input("Enter time interval in minutes (1min, 5min, 15min, 30min, 60min): ")
        data, meta_data = ts.get_intraday(symbol=ticker, outputsize="full", interval=minutes)
        print(data)
        data["4. close"].plot.line()
        plt.title(f"{title}'s Price Change Over Time (Intraday)", fontdict=font)
        plt.ylabel("Price", fontdict=font)
        plt.xlabel("Date", fontdict=font)
        plt.show()

    elif timeline == "Daily" or timeline == "daily":
        data, meta_data = ts.get_daily(symbol=ticker, outputsize="full")
        print(data)
        data["4. close"].plot.line()
        plt.title(f"{title}'s Price Change Over Time (Daily)", fontdict=font)
        plt.ylabel("Price", fontdict=font)
        plt.xlabel("Date", fontdict=font)
        plt.show()

    elif timeline == "Weekly" or timeline == "weekly":
        data, meta_data = ts.get_weekly(symbol=ticker, outputsize="full")
        print(data)
        data["4. close"].plot.line()
        plt.title(f"{title}'s Price Change Over Time (Weekly)", fontdict=font)
        plt.ylabel("Price", fontdict=font)
        plt.xlabel("Date", fontdict=font)
        plt.show()

    elif timeline == "Monthly" or timeline == "monthly":
        data, meta_data = ts.get_monthly(symbol=ticker, outputsize="full")
        print(data)
        data["4. close"].plot.line()
        plt.title(f"{title}'s Price Change Over Time (Monthly)", fontdict=font)
        #for row in data.itertuples(index=True, name=)

    else:
        pass
# FIXME no error checking implemented
